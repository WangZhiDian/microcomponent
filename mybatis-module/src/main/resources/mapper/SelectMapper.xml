<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.meng.dao.SelectUserDao">

<!--
    resultMap：设置自定义映射
    属性：
    id：表示自定义映射的唯一标识，不能重复
    type：查询的数据要映射的实体类的类型
    子标签：
        id：设置主键的映射关系
        result：设置普通字段的映射关系
        子标签属性：
        property：设置映射关系中实体类中的属性名
        column：设置映射关系中表中的字段名
        若字段名和实体类中的属性名不一致，则可以通过resultMap设置自定义映射，即使字段名和属性名一致的属性也要映射，也就是全部属性都要列出来
-->

    <resultMap id="BaseResultMap" type="com.meng.domain.User">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="id" property="id" jdbcType="BIGINT"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="age" property="age" jdbcType="INTEGER"/>
    </resultMap>

    <!--User getUserById(Long id); 单参数时，可以不指定类型，会做默认类型匹配-->
    <select id="getUserById" resultMap="BaseResultMap">
        select id, name, age from tbl_mybatis_user where id = #{id}
    </select>

    <!--User getUserByNameAndAge(String name, int age);-->
    <select id="getUserByNameAndAge" resultMap="BaseResultMap">
        <!-- select id, name, age from tbl_mybatis_user where name = #{param1} and age = #{param2} -->
        <!-- select id, name, age from tbl_mybatis_user where name = '${arg0}' and age = '${arg1}' -->

          select id, name, age from tbl_mybatis_user where name = #{arg0} and age = #{arg1}

    </select>

    <!--User getUserByNameAndAge2(@Param("name") String name, @Param("age") int age);-->
    <select id="getUserByNameAndAge2" resultMap="BaseResultMap">
          select id, name, age from tbl_mybatis_user where name = #{name} and age = #{age}
    </select>

    <!--User getUserByUser(User user);-->
    <select id="getUserByUser" resultMap="BaseResultMap">
          select id, name, age from tbl_mybatis_user where name = #{name} and age = #{age}
    </select>

    <!--User getUserBySelective(User user);-->
    <select id="getUserBySelective" resultMap="BaseResultMap">
          select id, name, age from tbl_mybatis_user where name = #{name} and age = #{age}
    </select>

    <!--List<User> getUsersByName(User user);-->
    <select id="getUsersByName" resultMap="BaseResultMap">
          <!-- select id, name, age from tbl_mybatis_user where name like "%"#{name}"%" -->
          <!-- select id, name, age from tbl_mybatis_user where name like '%${name}%' -->
          select id, name, age from tbl_mybatis_user where name like CONCAT('%', #{name}, '%')
    </select>

    <!--List<User> getUsersByMapInfo(Map map);-->
    <select id="getUsersByMapInfo" resultMap="BaseResultMap">
          select id, name, age from tbl_mybatis_user where name = #{name}
    </select>

    <!--int countByName(@Param("name") String name);-->
    <select id="countByName" resultType="_integer">
          select count(*) from tbl_mybatis_user where name = #{name}
    </select>

    <!--Map<String, String> getUserToMap(@Param("id") Long id);-->
    <select id="getUserToMap" resultType="map">
          select id, name, age from tbl_mybatis_user where id = #{id}
    </select>

    <!--List<Map<String, String>> getAllUserToMap();-->
    <select id="getAllUserToMap" resultType="map">
          select id, name, age from tbl_mybatis_user
    </select>

    <!--List<User> getUserByTable(@Param("table") String table);
        只能使用${}，因为表名不能加单引号-->
    <select id="getUserByTable" resultType="com.meng.domain.User">
          select * from ${tableName}
    </select>

    <!-- =======单表查询 end==================================================================== -->
    <!--多对一，级联方式处理映射关系-->
    <resultMap id="ScoreUserCourseResultOne" type="com.meng.domain.Score">
        <id property="id" column="id" jdbcType="BIGINT"/>
        <result column="user_id" property="userId" jdbcType="BIGINT"/>
        <result column="course_id" property="courseId" jdbcType="BIGINT"/>
        <result column="score" property="score" jdbcType="INTEGER"/>
        <result column="uid" property="user.id" jdbcType="BIGINT"/>
        <result column="uname" property="user.name" jdbcType="VARCHAR"/>
        <result column="uage" property="user.age" jdbcType="INTEGER"/>
    </resultMap>
    <!--Score getScoreByUserAndCourse(@Param("user_id") Long userId, @Param("course_id") Long courseId);-->
    <select id="getScoreByUserAndCourse" resultMap="ScoreUserCourseResultOne">
        select score.id, score.user_id, score.course_id, score.score, tuser.id uid,
            tuser.`NAME` uname, tuser.age uage from tbl_mybatis_score score
            left join tbl_mybatis_user tuser on score.user_id = tuser.id
            where score.user_id = #{user_id} and score.course_id = #{course_id};
    </select>

    <!-- List<Score> getScoreByCourse(@Param("course_id") Long courseId);-->
    <select id="getScoreByCourse" resultMap="ScoreUserCourseResultOne">
        select score.id, score.user_id, score.course_id, score.score, tuser.id uid,
            tuser.`NAME` uname, tuser.age uage from tbl_mybatis_score score
            left join tbl_mybatis_user tuser on score.user_id = tuser.id
            where score.course_id = #{course_id};
    </select>

    <!--多对一，association方式处理映射关系,一次性交叉查询-->
    <resultMap id="ScoreUserCourseResultTwo" type="com.meng.domain.Score">
        <id property="id" column="id" jdbcType="BIGINT"/>
        <result column="user_id" property="userId" jdbcType="BIGINT"/>
        <result column="course_id" property="courseId" jdbcType="BIGINT"/>
        <result column="score" property="score" jdbcType="INTEGER"/>
        <association property="user" javaType="com.meng.domain.User">
            <id property="id" column="id" jdbcType="BIGINT"/>
            <result property="name" column="name" jdbcType="VARCHAR"/>
            <result property="age" column="age" jdbcType="INTEGER"/>
        </association>
    </resultMap>

    <!-- Score getScoreByUserAndCourseAssociation(@Param("user_id") Long userId, @Param("course_id") Long courseId);-->
    <select id="getScoreByUserAndCourseAssociation" resultMap="ScoreUserCourseResultTwo">
        select score.course_id, score.score, tuser.id, tuser.`NAME`, tuser.age from tbl_mybatis_score score
            left join tbl_mybatis_user tuser on score.user_id = tuser.id
            where score.user_id = #{user_id} and score.course_id = #{course_id};
    </select>

    <!--多对一，两步骤方式处理映射关系,两次查询，无延迟查询,通过user_id作为二次查询对条件-->
    <resultMap id="ScoreUserCourseResultStepTwo" type="com.meng.domain.Score">
        <id property="id" column="id" jdbcType="BIGINT"/>
        <result column="user_id" property="userId" jdbcType="BIGINT"/>
        <result column="course_id" property="courseId" jdbcType="BIGINT"/>
        <result column="score" property="score" jdbcType="INTEGER"/>
        <association property="user"
                     column="{id=user_id}"
                     select="com.meng.dao.SelectUserDao.getUserById">
                     <!--select="getUserById"-->
        </association>
    </resultMap>

    <!--    Score getScoreByUserAndCourseStepTwo(@Param("user_id") Long userId, @Param("course_id") Long courseId);-->
    <select id="getScoreByUserAndCourseStepTwo" resultMap="ScoreUserCourseResultStepTwo">
        select score.user_id, score.course_id, score.score from tbl_mybatis_score score
            where score.user_id = #{user_id} and score.course_id = #{course_id};
    </select>

    <!--多对一，两步骤方式处理映射关系,两次查询，无延迟查询,通过user_id作为二次查询对条件,
        并且模拟二次查询时，参数中传递多个参数colunm="{param1=p1, param2=p2}"-->
    <resultMap id="ScoreUserCourseResultStepTwoMultiParam" type="com.meng.domain.Score">
        <id property="id" column="id" jdbcType="BIGINT"/>
        <result column="user_id" property="userId" jdbcType="BIGINT"/>
        <result column="course_id" property="courseId" jdbcType="BIGINT"/>
        <result column="score" property="score" jdbcType="INTEGER"/>
        <association property="user"
                     column="{id=user_id, param2=course_id}"
                     select="com.meng.dao.SelectUserDao.getUserById">
            <!--select="getUserById"-->
        </association>
    </resultMap>

    <!--    Score getScoreByUserAndCourseStepTwoMultiParam(@Param("user_id") Long userId, @Param("course_id") Long courseId);-->
    <select id="getScoreByUserAndCourseStepTwoMultiParam" resultMap="ScoreUserCourseResultStepTwoMultiParam">
        select score.user_id, score.course_id, score.score from tbl_mybatis_score score
            where score.user_id = #{user_id} and score.course_id = #{course_id};
    </select>

    <!-- =======多对一查询 end==================================================================== -->

    <!--  一对多，collection处理查询结果一对多对场景，单步骤，多表联合查询
    collection：用来处理一对多的映射关系
    ofType：表示该属性对饮的集合中存储的数据的类型-->
    <resultMap id="UserCourseResultOne" type="com.meng.domain.User">
        <id property="id" column="id" jdbcType="BIGINT"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="age" property="age" jdbcType="INTEGER"/>
        <collection property="scoreList" ofType="com.meng.domain.Score">
            <id property="id" column="sid" jdbcType="BIGINT"/>
            <result property="courseId" column="course_id" jdbcType="BIGINT"/>
            <result property="score" column="score" jdbcType="INTEGER"/>
        </collection>
    </resultMap>

    <!--    User getUserByIdCollectionStepOne(@Param("user_id") Long userId);-->
    <select id="getUserByIdCollectionStepOne" resultMap="UserCourseResultOne">
        select tuser.id, tuser.`NAME`, tuser.age, score.id sid, score.course_id, score.score from tbl_mybatis_user tuser
        left join tbl_mybatis_score score on tuser.id = score.user_id
            where tuser.id = #{user_id};
    </select>

    <!--  一对多，collection处理查询结果一对多对场景，两步骤，查询两次sql，无延迟查询-->
    <resultMap id="ScoreResultMap" type="com.meng.domain.Score">
        <id property="id" column="id" jdbcType="BIGINT"/>
        <result property="userId" column="user_id" jdbcType="BIGINT"/>
        <result property="courseId" column="course_id" jdbcType="BIGINT"/>
        <result property="score" column="score" jdbcType="INTEGER"/>
    </resultMap>
    
    <select id="selectScoreByUserId" resultMap="ScoreResultMap">
        select id, user_id, course_id, score from tbl_mybatis_score where user_id = #{user_id}
    </select>
    
    <resultMap id="UserScoreResultTwo" type="com.meng.domain.User">
        <id property="id" column="id" jdbcType="BIGINT"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="age" property="age" jdbcType="INTEGER"/>
        <collection property="scoreList"
                    select="selectScoreByUserId"
                    column="{user_id=id}">
        </collection>
    </resultMap>

    <!--    User getUserByUserIdCollection(@Param("user_id") Long userId);-->
    <select id="getUserByUserIdCollection" resultMap="UserScoreResultTwo">
        select id, name, age from tbl_mybatis_user where id = #{user_id}
    </select>

    <!--  一对多，collection处理查询结果一对多对场景，两步骤，查询两次sql，使用延迟加载查询-->
    <resultMap id="UserScoreResultTwoLazy" type="com.meng.domain.User">
        <id property="id" column="id" jdbcType="BIGINT"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="age" property="age" jdbcType="INTEGER"/>
        <collection property="scoreList"
                    fetchType="lazy"
                    select="selectScoreByUserId"
                    column="user_id">
        </collection>
    </resultMap>

    <!--    User getUserByUserIdCollectionLazy(@Param("user_id") Long userId);-->
    <select id="getUserByUserIdCollectionLazy" resultMap="UserScoreResultTwoLazy">
        select id, name, age from tbl_mybatis_user where id = #{user_id}
    </select>

    
</mapper>




