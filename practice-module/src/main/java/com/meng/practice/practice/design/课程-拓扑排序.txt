
有向五环图

BFS 前的准备工作
每门课的入度需要被记录，我们关心入度值的变化。
课程之间的依赖关系也要被记录，我们关心选当前课会减小哪些课的入度。
因此我们需要选择合适的数据结构，去存这些数据：
    入度数组：课号 0 到 n - 1 作为索引，通过遍历先决条件表求出对应的初始入度。
    邻接表：用哈希表记录依赖关系（也可以用二维矩阵，但有点大）
        key：课号
        value：依赖这门课的后续课（数组）

需要设置一个入度数组和一个邻接表
如果结果还有入度不为0的数据，说明图中有环，无法选中所有课程


方法一：入度表（广度优先遍历）
算法流程：
1 统计课程安排图中每个节点的入度，生成 入度表 indegrees。
2 借助一个队列 queue，将所有入度为 000 的节点入队。
3 当 queue 非空时，依次将队首节点出队，在课程安排图中删除此节点 pre：
    并不是真正从邻接表中删除此节点 pre，而是将此节点对应所有邻接节点 cur 的入度 −1-1−1，即 indegrees[cur] -= 1。
    当入度 −1-1−1后邻接节点 cur 的入度为 000，说明 cur 所有的前驱节点已经被 “删除”，此时将 cur 入队。
4 在每次 pre 出队时，执行 numCourses--；
    若整个课程安排图是有向无环图（即可以安排），则所有节点一定都入队并出队过，即完成拓扑排序。换个角度说，若课程安排图中存在环，一定有节点的入度始终不为 000。
    因此，拓扑排序出队次数等于课程个数，返回 numCourses == 0 判断课程是否可以成功安排。




